@model AppBranchListDto
@{
    Layout = "_Layout";
}


<div class="mb-3">

    <label>Sınıf :</label>
    

    <select id="classes" asp-for="ClassId" onchange="setInputDisplay()" asp-items="@ViewBag.classes" class="form form-control-sm">
        <option value="0">Bir Sınıf Seçiniz</option>
    </select>


</div>

<div class="mb-3" id="data-div" style="display:none">
    <table class="mt-3 table table-sm table-hover">
        <thead>
            <tr>
                <th>Şube</th>
                <th>Sınıf</th>
                <th>Mevcut</th>
                <th>İşlem</th>
            </tr>
        </thead>
        <tbody id="table-div">
        </tbody>


    </table>
</div>
    <div id="create-div"class="mb-3" style="display:none">
        <a href="javascript:void(0);" id="sendValue" class="btn btn-primary">Yeni Sınıf Ekle</a>
    </div>





@section script {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>


        // Select elementini seç
        var selectElement = document.getElementById("classes");

        // A etiketini seç
        var sendValueLink = document.getElementById("sendValue");

        // A etiketinin click olayını dinle
        sendValueLink.addEventListener("click", function () {
            // Seçili değeri al
            var selectedValue = selectElement.value;

            // Hedef sayfa URL'sine parametre ekleyerek git
            window.location.href = "/Branch/CreateBranch?id=" + selectedValue;
        });




        $(document).ready(function () {
            // Birinci selectbox'ın değişimini takip et
            $('#classes').change(function () {
                // Seçilen değeri al
                var sinifId = $(this).val();
                

                // AJAX kullanarak ilgili sınıfa ait şube ayrıntılarını getir
                $.get('/Branch/GetBranches', { classId: sinifId }, function (data) {
                    // Şube ayrıntılarını güncelle
                    updateTable(data);
                });
            });

            function updateTable(data) {
                // Tabloyu güncelleme mantığını burada gerçekleştir
                // Örnek olarak, tabloyu temizle ve yeni verileri ekleme
                var table = $('#table-div');
                table.empty();

                // Yeni verileri tabloya ekle
                $.each(data, function (index, item) {
                    var row = $('<tr>');
                    row.append($('<td>').text(item.definition));
                    row.append($('<td>').text(item.appClass.definition));
                    

                    table.append(row);
                });
            }
            
        });
        
        function setInputDisplay() {
            
            var selectElement = document.getElementById("classes");
            selectedDiv = document.getElementById("data-div");
            var classId = selectElement.value;
            buttonid = document.getElementById("create-div")

            if (classId == 6) {

                buttonid.style.display = "none";
                

                selectedDiv.style.display = "block";
            }
            else {
                buttonid.style.display = "block";
                selectedDiv.style.display = "block";

            }

            
            
        }

    </script>
}

